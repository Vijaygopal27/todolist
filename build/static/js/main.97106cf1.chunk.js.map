{"version":3,"sources":["component/InputArea.js","component/ToDoItem.js","App.js","reportWebVitals.js","index.js"],"names":["InputArea","props","useState","inputText","setInputText","className","type","onChange","event","target","value","onClick","addItems","ToDoItem","deleteItem","id","text","App","items","setItems","console","log","prevItems","filter","item","index","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAuBeA,EArBG,SAACC,GACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,OACE,sBAAKC,UAAU,OAAf,UACE,uBAAOC,KAAK,OAAOC,SALF,SAACC,GACpBJ,EAAaI,EAAMC,OAAOC,QAImBA,MAAOP,IAClD,wBACEQ,QAAS,WACPV,EAAMW,SAAST,GACfC,EAAa,KAHjB,SAME,6CCPOS,EARE,SAACZ,GACd,OACI,qBAAKU,QAAS,kBAAMV,EAAMa,WAAWb,EAAMc,KAA3C,SACI,6BAAKd,EAAMe,UCmCRC,MAlCf,WACE,MAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KAOAC,QAAQC,IAAIH,GAEZ,IAAMJ,EAAY,SAACC,GACjBI,GAAS,SAACG,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAKC,GAC5B,OAAOA,IAAUV,SAIvB,OACE,sBAAKV,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEJ,cAAC,EAAD,CAAWO,SAnBG,SAACT,GACfgB,GAAS,SAACG,GACT,MAAM,GAAN,mBAAWA,GAAX,CAAqBnB,UAkBtB,8BACE,6BACGe,EAAMQ,KAAI,SAACF,EAAOC,GACjB,OAAQ,cAAC,EAAD,CAAsBT,KAAMQ,EAAMV,WAAYA,EAAYC,GAAIU,GAA/CA,cCpBlBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.97106cf1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst InputArea = (props) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"form\">\r\n      <input type=\"text\" onChange={handleChange} value={inputText} />\r\n      <button\r\n        onClick={() => {\r\n          props.addItems(inputText);\r\n          setInputText(\"\");\r\n        }}\r\n      >\r\n        <span>Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import React from 'react'\r\n\r\nconst ToDoItem = (props) => {\r\n    return (\r\n        <div onClick={() => props.deleteItem(props.id)}>\r\n            <li>{props.text}</li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoItem\r\n","import { useState } from 'react';\nimport './App.css';\nimport InputArea from './component/InputArea';\nimport ToDoItem from './component/ToDoItem';\n\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  const addItems= (inputText) =>{\n    setItems((prevItems) =>{\n     return [...prevItems,inputText]\n    })\n  }\n  console.log(items)\n\n  const deleteItem =(id) =>{\n    setItems((prevItems) => {\n      return prevItems.filter((item,index) => {\n        return index !== id\n      })\n    })\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do-List</h1>\n      </div>\n    <InputArea addItems = {addItems}/>\n    <div>\n      <ul>\n        {items.map((item , index) =>{\n          return (<ToDoItem key={index} text={item} deleteItem={deleteItem} id={index} />\n         ) })}\n      </ul>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}